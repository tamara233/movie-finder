{"version":3,"sources":["Components/card/card.component.js","Components/card-list/card-list.component.jsx","Components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","movie","poster_path","width","height","title","release_date","CardList","data","map","id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","movies","fetch","method","headers","then","res","json","console","log","results","this","filteredmovies","filter","original_title","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,QACJC,IAAG,8CAAyCH,EAAMI,MAAMC,aACxDC,MAAM,QACNC,OAAO,UAET,6BAAKP,EAAMI,MAAMI,QACjB,4CAAeR,EAAMI,MAAMK,oBCPlBC,G,MAAW,SAACV,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMW,KAAKC,KAAI,SAACR,GAAD,OACd,cAAC,EAAD,CAAMA,MAAOA,GAAYA,EAAMS,WCN1BC,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEf,UAAU,SACVgB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiDDG,G,wDAnDb,aAAe,IAAD,8BACZ,gBA8BFH,aAAe,SAACI,GAAD,OAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SA7B1D,EAAKC,MAAQ,CACXC,OAAQ,GACRJ,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBK,MACE,sHACA,CACEC,OAAQ,MACRC,QAAS,KASVC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACnB,GACLsB,QAAQC,IAAIvB,EAAKwB,SACjB,EAAKd,SAAS,CACZK,OAAQf,EAAKwB,e,oBAOrB,WAAU,IAAD,EACyBC,KAAKX,MAA7BC,EADD,EACCA,OAAQJ,EADT,EACSA,YACVe,EAAiBX,EAAOY,QAAO,SAAClC,GAAD,OACnCA,EAAMmC,eAAeC,cAAcC,SAASnB,EAAYkB,kBAE1D,OACE,sBAAKvC,UAAU,MAAf,UACE,qDACA,cAAC,EAAD,CACEc,YAAY,gBACZC,aAAcoB,KAAKpB,eAErB,cAAC,EAAD,CAAUL,KAAM0B,W,GA9CNK,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7c155cc9.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <img\n      alt=\"movie\"\n      src={`https://image.tmdb.org/t/p/original/${props.movie.poster_path}`}\n      width=\"200px\"\n      height=\"250px\"\n    />\n    <h2>{props.movie.title}</h2>\n    <p>Filmed in: {props.movie.release_date}</p>\n  </div>\n)\n","import React from 'react'\nimport { Card } from '../card/card.component'\n\nimport './card-list.styles.css'\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.data.map((movie) => (\n        <Card movie={movie} key={movie.id} />\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\nimport './search-box.styles.css'\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    ></input>\n  )\n}\n","import React, { Component } from 'react'\nimport { CardList } from './Components/card-list/card-list.component'\nimport { SearchBox } from './Components/search-box/search-box.component'\n\nimport './App.css'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      movies: [],\n      searchField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch(\n      'https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=3718ff3b3e5b3155fdbdfbeab7134a00&page=1',\n      {\n        method: 'GET',\n        headers: {\n          //'access-control-allow-origin': '*',\n          //'Content-type': 'application/json; charset=UTF-8',\n          // 'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n          // // 'Access-Control-Allow-Headers':\n          //   'Origin, X-Requested-With, Content-Type, Accept, Authorization',\n        },\n      },\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data.results)\n        this.setState({\n          movies: data.results,\n        })\n      })\n  }\n\n  handleChange = (e) => this.setState({ searchField: e.target.value })\n\n  render() {\n    const { movies, searchField } = this.state\n    const filteredmovies = movies.filter((movie) =>\n      movie.original_title.toLowerCase().includes(searchField.toLowerCase()),\n    )\n    return (\n      <div className=\"App\">\n        <h1>Movies of All Times</h1>\n        <SearchBox\n          placeholder=\"Search movies\"\n          handleChange={this.handleChange}\n        />\n        <CardList data={filteredmovies} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}